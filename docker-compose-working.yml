version: '3.8'

services:
  # Go Backend API
  stock-prediction:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SERVER_PORT=8081
      - LOG_LEVEL=info
      - STOCK_SYMBOL=NVDA
      - ML_MODEL_PATH=/app/persistent_data/ml_models/nvda_lstm_model
      - STOCK_DATA_CACHE_PATH=/app/persistent_data/stock_data/cache
    volumes:
      - ./persistent_data:/app/persistent_data
      - ./scripts:/app/scripts:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - stock-prediction-network

  # Angular Frontend with Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    environment:
      - API_BASE_URL=http://stock-prediction:8081
    depends_on:
      - stock-prediction
    restart: unless-stopped
    networks:
      - stock-prediction-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - stock-prediction-network

networks:
  stock-prediction-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
