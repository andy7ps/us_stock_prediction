# Nginx Configuration for Bootstrap-Enhanced Angular Frontend
# Optimized for performance, security, and mobile-first design

# Main context
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP context
http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format optimized for Bootstrap frontend
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Hide nginx version
    server_tokens off;

    # Gzip compression for Bootstrap assets
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/woff
        font/woff2;

    # Brotli compression (if available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=30r/s;

    # Upstream backend
    upstream stock_prediction_api {
        server stock-prediction:8081;
        keepalive 32;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "Bootstrap Frontend OK\n";
            add_header Content-Type text/plain;
        }

        # API proxy with enhanced configuration
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://stock_prediction_api;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS headers for Bootstrap frontend
            add_header Access-Control-Allow-Origin "http://localhost:8080" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            add_header Access-Control-Expose-Headers "Content-Length,Content-Range" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "http://localhost:8080";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Bootstrap CSS and JS files with long-term caching
        location ~* \.(css|js)$ {
            limit_req zone=static burst=50 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Special handling for Bootstrap files
            location ~* bootstrap.*\.(css|js)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Bootstrap-Version "5.3.3";
            }
        }

        # Font files (Bootstrap Icons)
        location ~* \.(woff|woff2|ttf|eot|svg)$ {
            limit_req zone=static burst=30 nodelay;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
            
            # Special handling for Bootstrap Icons
            location ~* bootstrap-icons.*\.(woff|woff2|ttf|eot|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Bootstrap-Icons-Version "1.13.1";
            }
        }

        # Image files with optimization
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            limit_req zone=static burst=30 nodelay;
            expires 30d;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
        }

        # Static assets
        location /assets/ {
            limit_req zone=static burst=50 nodelay;
            expires 30d;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
        }

        # Angular routing - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            
            # Security headers for HTML
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header X-Content-Type-Options "nosniff" always;
            
            # PWA support
            location = /manifest.json {
                expires 1d;
                add_header Cache-Control "public";
            }
            
            location = /sw.js {
                expires 0;
                add_header Cache-Control "no-cache, no-store, must-revalidate";
            }
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Deny access to backup files
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Security: Deny access to sensitive files
        location ~* \.(env|log|ini)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Additional server block for HTTPS (when SSL is configured)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    #     ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    #     
    #     # SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     
    #     # Include the same location blocks as HTTP server
    #     include /etc/nginx/conf.d/locations.conf;
    # }
}
